{"ast":null,"code":"import _slicedToArray from\"C:/Users/tjjan/Documents/GitHub/Game-Night-Calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import{Link}from\"react-router-dom\";import RainierPlayTable from\"./RainierPlayTable\";import PayoutResults from\"./PayoutResults\";import GameSetup from\"./GameSetup\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RainierBlackJack=function RainierBlackJack(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),players=_useState2[0],setPlayers=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),rounds=_useState4[0],setRounds=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),gameActive=_useState6[0],setGameActive=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),gameOver=_useState8[0],setGameOver=_useState8[1];// Start Game\nvar onStart=function onStart(_ref){var players=_ref.players,rounds=_ref.rounds;players[0].isDealer=true;setPlayers(players);setRounds(rounds);setGameActive(true);};// reset active game\nvar onReset=function onReset(){setPlayers();setRounds();setGameActive(false);setGameOver(false);};// display results after end of game\nvar onGameOver=function onGameOver(){setGameOver(true);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Link,{to:\"/\",exact:true,children:\"Exit Game & Return to Main Menu\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Rainier Blackjack\"}),!gameActive&&!gameOver&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(GameSetup,{startGame:onStart})}),gameActive&&!gameOver&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(RainierPlayTable,{players:players,rounds:rounds,onGameOver:onGameOver})}),gameOver&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(PayoutResults,{players:players,onNewGame:onReset})})]});};export default RainierBlackJack;","map":{"version":3,"sources":["C:/Users/tjjan/Documents/GitHub/Game-Night-Calculator/src/components/RainierBlackJack.js"],"names":["useState","Link","RainierPlayTable","PayoutResults","GameSetup","RainierBlackJack","players","setPlayers","rounds","setRounds","gameActive","setGameActive","gameOver","setGameOver","onStart","isDealer","onReset","onGameOver"],"mappings":"4KAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,C,6IAGA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3B,cAA8BL,QAAQ,EAAtC,wCAAOM,OAAP,eAAgBC,UAAhB,eACA,eAA4BP,QAAQ,EAApC,yCAAOQ,MAAP,eAAeC,SAAf,eAEA,eAAoCT,QAAQ,CAAC,KAAD,CAA5C,yCAAOU,UAAP,eAAmBC,aAAnB,eACA,eAAgCX,QAAQ,CAAC,KAAD,CAAxC,yCAAOY,QAAP,eAAiBC,WAAjB,eAEA;AACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAyB,IAAtBR,CAAAA,OAAsB,MAAtBA,OAAsB,CAAbE,MAAa,MAAbA,MAAa,CACrCF,OAAO,CAAC,CAAD,CAAP,CAAWS,QAAX,CAAsB,IAAtB,CACAR,UAAU,CAACD,OAAD,CAAV,CACAG,SAAS,CAACD,MAAD,CAAT,CACAG,aAAa,CAAC,IAAD,CAAb,CACH,CALD,CAOA;AACA,GAAMK,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAClBT,UAAU,GACVE,SAAS,GACTE,aAAa,CAAC,KAAD,CAAb,CACAE,WAAW,CAAC,KAAD,CAAX,CACH,CALD,CAOA;AACA,GAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrBJ,WAAW,CAAC,IAAD,CAAX,CACH,CAFD,CAIA,mBACI,oCACI,KAAC,IAAD,EAAM,EAAE,CAAC,GAAT,CAAa,KAAK,KAAlB,6CADJ,cAEI,yCAFJ,CAIK,CAACH,UAAD,EAAe,CAACE,QAAhB,eAA4B,sCACzB,KAAC,SAAD,EAAW,SAAS,CAAEE,OAAtB,EADyB,EAJjC,CAQKJ,UAAU,EAAI,CAACE,QAAf,eAA2B,sCACxB,KAAC,gBAAD,EAAkB,OAAO,CAAEN,OAA3B,CAAoC,MAAM,CAAEE,MAA5C,CAAoD,UAAU,CAAES,UAAhE,EADwB,EARhC,CAYKL,QAAQ,eAAI,sCACT,KAAC,aAAD,EAAe,OAAO,CAAEN,OAAxB,CAAiC,SAAS,CAAEU,OAA5C,EADS,EAZjB,GADJ,CAkBH,CA9CD,CAgDA,cAAeX,CAAAA,gBAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RainierPlayTable from \"./RainierPlayTable\";\r\nimport PayoutResults from \"./PayoutResults\";\r\nimport GameSetup from \"./GameSetup\";\r\n\r\n\r\nconst RainierBlackJack = () => {\r\n    const [players, setPlayers] = useState()\r\n    const [rounds, setRounds] = useState()\r\n\r\n    const [gameActive, setGameActive] = useState(false)\r\n    const [gameOver, setGameOver] = useState(false)\r\n\r\n    // Start Game\r\n    const onStart = ({ players, rounds }) => {\r\n        players[0].isDealer = true\r\n        setPlayers(players)\r\n        setRounds(rounds)\r\n        setGameActive(true)\r\n    }\r\n\r\n    // reset active game\r\n    const onReset = () => {\r\n        setPlayers()\r\n        setRounds()\r\n        setGameActive(false)\r\n        setGameOver(false)\r\n    }\r\n\r\n    // display results after end of game\r\n    const onGameOver = () => {\r\n        setGameOver(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/\" exact>Exit Game & Return to Main Menu</Link>\r\n            <h1>Rainier Blackjack</h1>\r\n\r\n            {!gameActive && !gameOver && <>\r\n                <GameSetup startGame={onStart} />\r\n            </>}\r\n\r\n            {gameActive && !gameOver && <>\r\n                <RainierPlayTable players={players} rounds={rounds} onGameOver={onGameOver} />\r\n            </>}\r\n\r\n            {gameOver && <>\r\n                <PayoutResults players={players} onNewGame={onReset} />\r\n            </>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RainierBlackJack\r\n"]},"metadata":{},"sourceType":"module"}