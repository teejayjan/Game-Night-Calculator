{"ast":null,"code":"import _objectSpread from\"C:/Users/tjjan/Documents/GitHub/Game-Night-Calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:/Users/tjjan/Documents/GitHub/Game-Night-Calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/tjjan/Documents/GitHub/Game-Night-Calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import{Button,ButtonGroup,TextField,Grid,Table,TableBody,TableCell,TableContainer,TableHead,TableRow}from\"@mui/material\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var GameSetup=function GameSetup(_ref){var startGame=_ref.startGame;var _useState=useState(),_useState2=_slicedToArray(_useState,2),player=_useState2[0],setPlayer=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),players=_useState4[0],setPlayers=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),editPlayer=_useState6[0],setEditPlayer=_useState6[1];var _useState7=useState(1),_useState8=_slicedToArray(_useState7,2),playerCount=_useState8[0],setPlayerCount=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),rounds=_useState10[0],setRounds=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isEditing=_useState12[0],setIsEditing=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),isConfirming=_useState14[0],setIsConfirming=_useState14[1];var _useState15=useState(true),_useState16=_slicedToArray(_useState15,2),isAddingPlayers=_useState16[0],setIsAddingPlayers=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),isAddingRounds=_useState18[0],setIsAddingRounds=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),isStartReady=_useState20[0],setIsStartReady=_useState20[1];// Handles adding of new player\nvar onNewPlayer=function onNewPlayer(){setPlayerCount(playerCount+1);var newPlayer={id:playerCount,name:player,total:0,isDealer:false};setPlayers([].concat(_toConsumableArray(players),[newPlayer]));};// Handles editing player name\nvar onEditPlayer=function onEditPlayer(id){var playerToEdit=players.filter(function(player){return player.id===id;});setEditPlayer(playerToEdit[0]);setIsEditing(true);};var onSaveEdit=function onSaveEdit(){var playerIndex=players.findIndex(function(player){return player.id===editPlayer.id;});players[playerIndex].name=editPlayer.name;setPlayers(_toConsumableArray(players));setIsEditing(false);setEditPlayer({});};// Handles deleting player\nvar onDeletePlayer=function onDeletePlayer(id){var tempPlayerList=players.filter(function(player){return player.id!==id;});for(var i=0;i<tempPlayerList.length;i++){tempPlayerList[i].id=i+1;}setPlayers(tempPlayerList);setPlayerCount(playerCount-1);};// Handles locking in player list\nvar onConfirmPlayers=function onConfirmPlayers(){if(!isConfirming){setIsConfirming(true);return;}setIsAddingPlayers(false);setIsAddingRounds(true);setIsConfirming(false);};// Handles submitting number of rounds per player\nvar onSaveRounds=function onSaveRounds(){if(!isConfirming){setIsConfirming(true);return;}setIsAddingRounds(false);setIsStartReady(true);};var onStart=function onStart(){startGame({players:players,rounds:rounds});};var onReset=function onReset(){setPlayer();setPlayers([]);setEditPlayer({});setPlayerCount(1);setRounds();setIsEditing(false);setIsConfirming(false);setIsAddingPlayers(true);setIsAddingRounds(false);setIsStartReady(false);};return/*#__PURE__*/_jsxs(_Fragment,{children:[isAddingPlayers&&/*#__PURE__*/_jsxs(_Fragment,{children:[\" \",/*#__PURE__*/_jsx(\"h3\",{children:\"Enter player names:\"}),/*#__PURE__*/_jsxs(Grid,{container:true,wrap:\"nowrap\",spacing:2,sx:{width:95/100},children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(TextField,{label:\"Player\",variant:\"outlined\",onChange:function onChange(e){return setPlayer(e.target.value);}})}),/*#__PURE__*/_jsx(Grid,{item:true,sx:{my:'auto'},children:/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"contained\",type:\"submit\",onClick:onNewPlayer,children:\" Add Player \"})})]}),playerCount>2&&/*#__PURE__*/_jsx(Grid,{container:true,wrap:\"nowrap\",spacing:2,sx:{width:95/100,my:1},children:isConfirming?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Button,{color:\"warning\",size:\"small\",variant:\"contained\",type:\"submit\",onClick:onConfirmPlayers,children:\" Yes, Confirm Players \"})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Button,{color:\"success\",size:\"small\",variant:\"contained\",type:\"submit\",onClick:function onClick(){return setIsConfirming(false);},children:\" No, Go Back \"})})]}):/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Button,{color:\"success\",size:\"small\",variant:\"contained\",type:\"submit\",onClick:onConfirmPlayers,children:\" Confirm Players \"})})})]}),isAddingRounds&&/*#__PURE__*/_jsxs(_Fragment,{children:[\" \",/*#__PURE__*/_jsx(\"h3\",{children:\"Enter number of times each player will deal:\"}),/*#__PURE__*/_jsxs(Grid,{container:true,wrap:\"nowrap\",spacing:2,sx:{width:95/100},children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(TextField,{label:\"Rounds\",variant:\"outlined\",onChange:function onChange(e){return setRounds(e.target.value);}})}),rounds&&/*#__PURE__*/_jsx(Grid,{item:true,sx:{my:'auto'},children:isConfirming?/*#__PURE__*/_jsxs(ButtonGroup,{children:[/*#__PURE__*/_jsx(Button,{color:\"warning\",size:\"small\",variant:\"contained\",type:\"submit\",onClick:onSaveRounds,children:\" Yes, Confirm Rounds \"}),/*#__PURE__*/_jsx(Button,{color:\"success\",size:\"small\",variant:\"contained\",type:\"submit\",onClick:function onClick(){return setIsConfirming(false);},children:\" No, Go Back \"})]}):/*#__PURE__*/_jsx(Button,{color:\"success\",size:\"small\",variant:\"contained\",type:\"submit\",onClick:onSaveRounds,children:\" Confirm Rounds \"})})]})]}),isStartReady&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Ready to begin with \",playerCount-1,\" players dealing \",rounds,\" hands each for a total of \",(playerCount-1)*rounds,\" hands?\"]}),/*#__PURE__*/_jsxs(Grid,{container:true,wrap:\"nowrap\",spacing:2,sx:{width:95/100},children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Button,{color:\"success\",variant:\"contained\",type:\"submit\",onClick:onStart,children:\" Start Game \"})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Button,{color:\"warning\",variant:\"contained\",type:\"submit\",onClick:onReset,children:\" Redo Game Setup \"})})]})]}),isEditing&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Editing \",editPlayer.name,\" \"]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,sx:{width:95/100},children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(TextField,{label:\"Player\",variant:\"outlined\",onChange:function onChange(e){return setEditPlayer(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{name:e.target.value});});}})}),/*#__PURE__*/_jsx(Grid,{item:true,sx:{my:'auto'},children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",type:\"submit\",onClick:onSaveEdit,children:\" Update \"})})]})]}),/*#__PURE__*/_jsx(TableContainer,{sx:{my:2},children:/*#__PURE__*/_jsxs(Table,{sx:{minWidth:200},children:[/*#__PURE__*/_jsx(TableHead,{sx:isAddingPlayers?\"\":{background:'rgba(76, 175, 80, 1)'},children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\" Number \"}),/*#__PURE__*/_jsx(TableCell,{children:\" Player Name \"}),/*#__PURE__*/_jsx(TableCell,{})]})}),/*#__PURE__*/_jsx(TableBody,{children:players.map(function(row){return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsxs(TableCell,{component:\"th\",scope:\"row\",children:[\"Player \",row.id]}),/*#__PURE__*/_jsx(TableCell,{children:row.name}),/*#__PURE__*/_jsx(TableCell,{children:isAddingPlayers&&/*#__PURE__*/_jsxs(ButtonGroup,{size:\"small\",children:[/*#__PURE__*/_jsx(Button,{type:\"submit\",onClick:function onClick(){return onEditPlayer(row.id);},children:\" Edit \"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",onClick:function onClick(){return onDeletePlayer(row.id);},children:\" Delete \"})]})})]},row.id);})})]})})]});};export default GameSetup;","map":{"version":3,"sources":["C:/Users/tjjan/Documents/GitHub/Game-Night-Calculator/src/components/GameSetup.js"],"names":["useState","Button","ButtonGroup","TextField","Grid","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","GameSetup","startGame","player","setPlayer","players","setPlayers","editPlayer","setEditPlayer","playerCount","setPlayerCount","rounds","setRounds","isEditing","setIsEditing","isConfirming","setIsConfirming","isAddingPlayers","setIsAddingPlayers","isAddingRounds","setIsAddingRounds","isStartReady","setIsStartReady","onNewPlayer","newPlayer","id","name","total","isDealer","onEditPlayer","playerToEdit","filter","onSaveEdit","playerIndex","findIndex","onDeletePlayer","tempPlayerList","i","length","onConfirmPlayers","onSaveRounds","onStart","onReset","width","e","target","value","my","prevState","minWidth","background","map","row"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { Button, ButtonGroup, TextField, Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@mui/material\";\r\n\r\nconst GameSetup = ({ startGame }) => {\r\n    const [player, setPlayer] = useState()\r\n    const [players, setPlayers] = useState([])\r\n\r\n    const [editPlayer, setEditPlayer] = useState({})\r\n    let [playerCount, setPlayerCount] = useState(1)\r\n\r\n    const [rounds, setRounds] = useState()\r\n\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const [isConfirming, setIsConfirming] = useState(false)\r\n    const [isAddingPlayers, setIsAddingPlayers] = useState(true)\r\n    const [isAddingRounds, setIsAddingRounds] = useState(false)\r\n    const [isStartReady, setIsStartReady] = useState(false)\r\n\r\n    // Handles adding of new player\r\n    const onNewPlayer = () => {\r\n        setPlayerCount(playerCount + 1)\r\n        let newPlayer = { id: playerCount, name: player, total: 0, isDealer: false }\r\n        setPlayers([...players, newPlayer])\r\n    }\r\n\r\n    // Handles editing player name\r\n    const onEditPlayer = (id) => {\r\n        const playerToEdit = players.filter(player => player.id === id)\r\n        setEditPlayer(playerToEdit[0])\r\n        setIsEditing(true)\r\n    }\r\n\r\n    const onSaveEdit = () => {\r\n        const playerIndex = players.findIndex((player => player.id === editPlayer.id))\r\n        players[playerIndex].name = editPlayer.name\r\n        setPlayers([...players])\r\n        setIsEditing(false)\r\n        setEditPlayer({})\r\n    }\r\n\r\n    // Handles deleting player\r\n    const onDeletePlayer = (id) => {\r\n        const tempPlayerList = players.filter((player) => player.id !== id)\r\n        for (let i = 0; i < tempPlayerList.length; i++)\r\n            tempPlayerList[i].id = i + 1\r\n        setPlayers(tempPlayerList)\r\n        setPlayerCount(playerCount - 1)\r\n    }\r\n\r\n    // Handles locking in player list\r\n    const onConfirmPlayers = () => {\r\n        if (!isConfirming) {\r\n            setIsConfirming(true)\r\n            return\r\n        }\r\n        setIsAddingPlayers(false)\r\n        setIsAddingRounds(true)\r\n        setIsConfirming(false)\r\n    }\r\n\r\n    // Handles submitting number of rounds per player\r\n    const onSaveRounds = () => {\r\n        if (!isConfirming) {\r\n            setIsConfirming(true)\r\n            return\r\n        }\r\n        setIsAddingRounds(false)\r\n        setIsStartReady(true)\r\n    }\r\n\r\n    const onStart = () => {\r\n        startGame({players, rounds})\r\n    }\r\n\r\n    const onReset = () => {\r\n        setPlayer()\r\n        setPlayers([])\r\n        setEditPlayer({})\r\n        setPlayerCount(1)\r\n        setRounds()\r\n        setIsEditing(false)\r\n        setIsConfirming(false)\r\n        setIsAddingPlayers(true)\r\n        setIsAddingRounds(false)\r\n        setIsStartReady(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* Adding Players */}\r\n            {isAddingPlayers && <> <h3>Enter player names:</h3>\r\n                <Grid container wrap='nowrap' spacing={2} sx={{ width: 95 / 100 }}>\r\n                    <Grid item>\r\n                        <TextField label=\"Player\" variant=\"outlined\"\r\n                            onChange={(e) => setPlayer(e.target.value)}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sx={{ my: 'auto' }}>\r\n                        <Button size=\"small\" variant=\"contained\" type=\"submit\" onClick={onNewPlayer}> Add Player </Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {playerCount > 2 && <Grid container wrap='nowrap' spacing={2} sx={{ width: 95 / 100, my: 1 }}>\r\n                    {isConfirming\r\n                        ?\r\n                        <>\r\n                            <Grid item>\r\n                                <Button color=\"warning\" size=\"small\" variant=\"contained\" type=\"submit\" onClick={onConfirmPlayers}> Yes, Confirm Players </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button color=\"success\" size=\"small\" variant=\"contained\" type=\"submit\" onClick={() => setIsConfirming(false)}> No, Go Back </Button>\r\n                            </Grid>\r\n                        </>\r\n                        :\r\n                        <Grid item>\r\n                            <Button color=\"success\" size=\"small\" variant=\"contained\" type=\"submit\" onClick={onConfirmPlayers}> Confirm Players </Button>\r\n                        </Grid>}\r\n                </Grid>}\r\n            </>}\r\n\r\n            {/* Set Number of Rounds */}\r\n            {isAddingRounds && <> <h3>Enter number of times each player will deal:</h3>\r\n                <Grid container wrap='nowrap' spacing={2} sx={{ width: 95 / 100 }}>\r\n                    <Grid item>\r\n                        <TextField label=\"Rounds\" variant=\"outlined\"\r\n                            onChange={(e) => setRounds(e.target.value)}\r\n                        />\r\n                    </Grid>\r\n                    {rounds && <Grid item sx={{ my: 'auto' }}>\r\n                        {isConfirming\r\n                            ?\r\n                            <ButtonGroup>\r\n                                <Button color=\"warning\" size=\"small\" variant=\"contained\" type=\"submit\" onClick={onSaveRounds}> Yes, Confirm Rounds </Button>\r\n                                <Button color=\"success\" size=\"small\" variant=\"contained\" type=\"submit\" onClick={() => setIsConfirming(false)}> No, Go Back </Button>\r\n                            </ButtonGroup>\r\n                            :\r\n                            <Button color=\"success\" size=\"small\" variant=\"contained\" type=\"submit\" onClick={onSaveRounds}> Confirm Rounds </Button>}\r\n                    </Grid>}\r\n                </Grid>\r\n            </>}\r\n\r\n            {/* Ready message and button */}\r\n            {isStartReady && <>\r\n                <h3>Ready to begin with {playerCount - 1} players dealing {rounds} hands each for a total of {(playerCount - 1) * rounds} hands?</h3>\r\n                <Grid container wrap='nowrap' spacing={2} sx={{ width: 95 / 100 }}>\r\n                    <Grid item>\r\n                        <Button color=\"success\" variant=\"contained\" type=\"submit\" onClick={onStart}> Start Game </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button color=\"warning\" variant=\"contained\" type=\"submit\" onClick={onReset}> Redo Game Setup </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </>}\r\n\r\n            {/* Editing Dialogue Box */}\r\n            {isEditing && <>\r\n                <p>Editing {editPlayer.name} </p>\r\n                <Grid container spacing={2} sx={{ width: 95 / 100 }}>\r\n                    <Grid item>\r\n                        <TextField label=\"Player\" variant=\"outlined\"\r\n                            onChange={(e) => setEditPlayer(prevState => ({ ...prevState, name: e.target.value }))}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sx={{ my: 'auto' }}>\r\n                        <Button variant=\"contained\" type=\"submit\" onClick={onSaveEdit}> Update </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </>}\r\n\r\n            <TableContainer sx={{ my: 2 }}>\r\n                <Table sx={{ minWidth: 200 }}>\r\n                    <TableHead sx={isAddingPlayers ? \"\" : { background: 'rgba(76, 175, 80, 1)' }}>\r\n                        <TableRow>\r\n                            <TableCell> Number </TableCell>\r\n                            <TableCell> Player Name </TableCell>\r\n                            <TableCell></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {players.map((row) => (\r\n                            <TableRow\r\n                                key={row.id}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    Player {row.id}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {row.name}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {isAddingPlayers && <ButtonGroup size=\"small\">\r\n                                        <Button type=\"submit\" onClick={() => onEditPlayer(row.id)}> Edit </Button>\r\n                                        <Button type=\"submit\" onClick={() => onDeletePlayer(row.id)}> Delete </Button>\r\n                                    </ButtonGroup>}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GameSetup\r\n"]},"metadata":{},"sourceType":"module"}