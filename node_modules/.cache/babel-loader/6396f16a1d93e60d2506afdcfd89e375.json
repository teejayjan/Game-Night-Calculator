{"ast":null,"code":"import _slicedToArray from\"C:/Users/tjjan/Documents/GitHub/Game-Night-Calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Router,Route,Switch,useHistory}from\"react-router-dom\";import{useState}from\"react\";import'@fontsource/roboto/300.css';import'@fontsource/roboto/400.css';import'@fontsource/roboto/500.css';import'@fontsource/roboto/700.css';import{Box,Button,ButtonGroup,Select,FormControl,InputLabel,MenuItem,Container}from\"@mui/material\";import Rules from\"./components/Rules\";import RainierBlackJack from\"./components/RainierBlackJack\";import Footer from\"./components/Footer\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var history=useHistory();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showRules=_useState2[0],setShowRules=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),choice=_useState4[0],setChoice=_useState4[1];// Display-safe titles for rules display\nvar gameTitles={\"rainier-blackjack\":\"Rainier Blackjack\"};// Handle showRules\nvar displayRules=function displayRules(){// Don't change state of showRules if user chose an incorrect choice\nif(validateChoice(choice))return;setShowRules(!showRules);};// Handle startGame \nvar beginGame=function beginGame(){// Don't change state of startGame if user chose an incorrect choice\nif(validateChoice(choice)){return;}history.push(\"/rainierblackjack\");};// Validate user choice\nvar validateChoice=function validateChoice(value){if(value===\"\"||value===\"default\"||value===\"under-construction\"){alert(\"Please select a valid option\");return true;}};// Box configurations\nvar outerBox={mt:5,display:\"flex\",justifyContent:\"center\",alignItems:'center',bgcolor:'background.paper',overflow:'hidden',borderRadius:'12px',boxShadow:10};var innerBox={display:'flex',flexDirection:'column',alignItems:{xs:'center',md:'flex-start'},m:3,minWidth:{md:350}};return/*#__PURE__*/_jsx(Router,{history:history,children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",children:/*#__PURE__*/_jsx(Container,{maxWidth:\"sm\",children:/*#__PURE__*/_jsx(Box,{sx:outerBox,children:/*#__PURE__*/_jsxs(Box,{sx:innerBox,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Game Night Calculator\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Please select a game and an option to continue:\"}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"gameSelect\",children:\" Options \"}),/*#__PURE__*/_jsxs(Select,{labelId:\"gameSelectLabel\",id:\"gameSelect\",value:choice,label:\"Choice\",onChange:function onChange(e){return setChoice(e.target.value);},children:[/*#__PURE__*/_jsx(MenuItem,{value:\"rainier-blackjack\",children:\" Rainier Blackjack \"}),/*#__PURE__*/_jsx(MenuItem,{value:\"under-construction\",children:\" Additional games under construction! \"})]})]}),/*#__PURE__*/_jsxs(ButtonGroup,{variant:\"contained\",sx:{my:2},children:[/*#__PURE__*/_jsx(Button,{type:\"submit\",onClick:beginGame,children:\" Start New Game \"}),/*#__PURE__*/_jsxs(Button,{type:\"submit\",onClick:displayRules,children:[\" \",!showRules?\"Display Rules\":\"Hide Rules\",\" \"]})]}),showRules&&/*#__PURE__*/_jsx(Rules,{game:gameTitles[choice]}),/*#__PURE__*/_jsx(Footer,{})]})})})}),/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Box,{sx:outerBox,children:/*#__PURE__*/_jsx(Box,{sx:innerBox,children:/*#__PURE__*/_jsxs(Route,{exact:true,path:\"/rainierblackjack\",children:[/*#__PURE__*/_jsx(RainierBlackJack,{}),/*#__PURE__*/_jsx(Footer,{})]})})})})]})});}export default App;","map":{"version":3,"sources":["C:/Users/tjjan/Documents/GitHub/Game-Night-Calculator/src/App.js"],"names":["Router","Route","Switch","useHistory","useState","Box","Button","ButtonGroup","Select","FormControl","InputLabel","MenuItem","Container","Rules","RainierBlackJack","Footer","App","history","showRules","setShowRules","choice","setChoice","gameTitles","displayRules","validateChoice","beginGame","push","value","alert","outerBox","mt","display","justifyContent","alignItems","bgcolor","overflow","borderRadius","boxShadow","innerBox","flexDirection","xs","md","m","minWidth","e","target","my"],"mappings":"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","sourcesContent":["import { Router, Route, Switch, useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\"\r\nimport '@fontsource/roboto/300.css';\r\nimport '@fontsource/roboto/400.css';\r\nimport '@fontsource/roboto/500.css';\r\nimport '@fontsource/roboto/700.css';\r\nimport { Box, Button, ButtonGroup, Select, FormControl, InputLabel, MenuItem, Container } from \"@mui/material\";\r\nimport Rules from \"./components/Rules\";\r\nimport RainierBlackJack from \"./components/RainierBlackJack\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nfunction App() {\r\n    const history = useHistory();\r\n    const [showRules, setShowRules] = useState(false);\r\n    const [choice, setChoice] = useState(\"\")\r\n\r\n    // Display-safe titles for rules display\r\n    const gameTitles = {\r\n        \"rainier-blackjack\": \"Rainier Blackjack\"\r\n    }\r\n\r\n    // Handle showRules\r\n    const displayRules = () => {\r\n        // Don't change state of showRules if user chose an incorrect choice\r\n        if (validateChoice(choice))\r\n            return\r\n        setShowRules(!showRules)\r\n    }\r\n\r\n    // Handle startGame \r\n    const beginGame = () => {\r\n        // Don't change state of startGame if user chose an incorrect choice\r\n        if (validateChoice(choice)) {\r\n            return\r\n        }\r\n        history.push(\"/rainierblackjack\")\r\n    }\r\n\r\n    // Validate user choice\r\n    const validateChoice = (value) => {\r\n        if (value === \"\" || value === \"default\" || value === \"under-construction\") {\r\n            alert(\"Please select a valid option\")\r\n            return true\r\n        }\r\n    }\r\n\r\n    // Box configurations\r\n    const outerBox = {\r\n        mt: 5,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: 'center',\r\n        bgcolor: 'background.paper',\r\n        overflow: 'hidden',\r\n        borderRadius: '12px',\r\n        boxShadow: 10,\r\n    }\r\n\r\n    const innerBox = {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: { xs: 'center', md: 'flex-start' },\r\n        m: 3,\r\n        minWidth: { md: 350 },\r\n    }\r\n\r\n    return (\r\n        <Router history={history}>\r\n            <Switch>\r\n                {/* Main Menu */}\r\n                <Route exact path=\"/\" >\r\n                    <Container maxWidth=\"sm\">\r\n                        <Box sx={outerBox}>\r\n                            <Box sx={innerBox}>\r\n                                <h1>Game Night Calculator</h1>\r\n                                <p>Please select a game and an option to continue:</p>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel id=\"gameSelect\"> Options </InputLabel>\r\n                                    <Select\r\n                                        labelId=\"gameSelectLabel\"\r\n                                        id=\"gameSelect\"\r\n                                        value={choice}\r\n                                        label=\"Choice\"\r\n                                        onChange={(e) => setChoice(e.target.value)}\r\n                                    >\r\n                                        <MenuItem value={\"rainier-blackjack\"}> Rainier Blackjack </MenuItem>\r\n                                        <MenuItem value={\"under-construction\"}> Additional games under construction! </MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <ButtonGroup variant=\"contained\" sx={{ my: 2 }}>\r\n                                    <Button type=\"submit\" onClick={beginGame}> Start New Game </Button>\r\n                                    <Button type=\"submit\" onClick={displayRules}> {!showRules ? \"Display Rules\" : \"Hide Rules\"} </Button>\r\n                                </ButtonGroup>\r\n                                {showRules && <Rules game={gameTitles[choice]} />}\r\n                                <Footer/>\r\n                            </Box>\r\n                        </Box>\r\n                    </Container>\r\n                </Route>\r\n\r\n                {/* Rainier Blackjack Game Screen */}\r\n                <Container >\r\n                    <Box sx={outerBox}>\r\n                        <Box sx={innerBox}>\r\n                            <Route exact path=\"/rainierblackjack\">\r\n                                <RainierBlackJack />\r\n                                <Footer/>\r\n                            </Route>\r\n                        </Box>\r\n                    </Box>\r\n                </Container>\r\n            </Switch>\r\n        </Router >\r\n    );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}