import ReactDOM from 'react-dom';
import * as React from 'react';
// eslint-disable-next-line @typescript-eslint/no-unused-vars
export const renderTemplate = (template, model, _component) => {
    template(model, model.container);
};
export const hasTemplate = (name, props, _component) => !!props[name];
export const getWrapperTemplate = (TemplateProp) => (data) => {
    if (typeof TemplateProp !== 'string' && !(TemplateProp instanceof Element)) {
        const container = data.container ? data.container : data;
        ReactDOM.render(
        /* eslint-disable react/jsx-props-no-spreading */
        React.createElement(React.Fragment, null,
            React.createElement(TemplateProp, Object.assign({}, data))), container);
    }
};
export const getTemplate = (TemplateProp, RenderProp, ComponentProp) => ((TemplateProp && (TemplateProp.defaultProps ? (props) => React.createElement(TemplateProp, Object.assign({}, props)) : TemplateProp))
    || (RenderProp
        && ((props) => RenderProp(...('data' in props ? [props.data, props.index] : [props]))))
    || (ComponentProp && ((props) => React.createElement(ComponentProp, Object.assign({}, props)))));
